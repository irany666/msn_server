<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mianshiniu.manager.system.mapper.UserMapper">


    <select id="getOrgFullName" parameterType="string" resultType="java.lang.String">
        <![CDATA[




        SELECT GROUP_CONCAT(org.name order by tmp.lvl desc separator '/')
        FROM (
                 SELECT
                     @r AS _id,
                     (SELECT @r := parent_id FROM t_org WHERE id = _id) AS parent_id,
                     @l := @l + 1 AS lvl
                 FROM
                     (SELECT @r := #{orgId}, @l := 0) vars,
                      t_org h
                 WHERE @r <> 0) tmp
                 JOIN t_org org
                      ON tmp._id = org.id
        ORDER BY tmp.lvl desc




        ]]>
    </select>

    <select id="getAddressList" resultType="com.mianshiniu.manager.system.entity.dto.UserAddressListDTO">
        SELECT
        t1.id,t1.user_name,t1.phone, t1.email, t1.status,t1.telephone
        ,t2.org_id as orgId
        ,t3.name as orgName
        ,t5.name as positionName
        ,t1.avatar_url as avatar_url
        ,t6.office as office
        ,t6.station as station
        FROM
        t_user t1
        right join t_user_org t2 on t1.id = t2.user_id
        left join t_org t3 on t2.org_id = t3.id
        left join t_user_position t4 on t1.id = t4.user_id
        left join t_position t5 on t4.position_id = t5.id
        left join t_user_ext t6 on t1.id=t6.user_id
        where
        (t1.status = 1 or t1.status = 2)
        <if test="orgId!=null">
            AND t2.org_id = #{orgId,jdbcType=VARCHAR}
        </if>
        <if test="orgName!=null">
            AND t3.name LIKE #{orgName,jdbcType=VARCHAR}
        </if>
    </select>
    <select id="getUserByOrgId" resultType="com.mianshiniu.manager.system.entity.UserEntity">
        SELECT
        t.id,
        t.user_name,
        t.account,
        t.phone,
        t.email,
        t.sex,
        t.avatar_url,
        t.PASSWORD,
        t.creator_id,
        t.creator,
        t.reviser_id,
        t.reviser,
        t.STATUS,
        t.create_time,
        t.update_time,
        t.id_no,
        t.birthday,
        t.office,
        t.station,
        t.address,
        t.org_name
        FROM
        (
        SELECT
        t1.id AS id,
        t1.user_name AS user_name,
        t1.account AS account,
        t1.phone AS phone,
        t1.email AS email,
        t1.sex AS sex,
        t1.avatar_url AS avatar_url,
        t1.PASSWORD AS PASSWORD,
        t1.creator_id AS creator_id,
        t1.creator AS creator,
        t1.reviser_id AS reviser_id,
        t1.reviser AS reviser,
        t1.STATUS AS STATUS,
        t1.create_time AS create_time,
        t1.update_time AS update_time,
        t1.id_no AS id_no,
        t2.birthday AS birthday,
        t2.office AS office,
        t2.station AS station,
        t2.address AS address,
        ( SELECT NAME FROM t_org WHERE id = ( SELECT org_id FROM t_user_org WHERE user_id = t1.id ) ) AS org_name
        FROM
        t_user t1
        LEFT JOIN t_user_ext t2 ON t1.id = t2.user_id

        <if test="orgId!=null">
            where t1.id IN ( SELECT user_id FROM t_user_org WHERE org_id = #{orgId})
        </if>
        ) t
        where
        t.org_name like #{orgName,jdbcType=VARCHAR}
        or t.email like #{email,jdbcType=VARCHAR}
        or t.phone like #{phone,jdbcType=VARCHAR}
        or t.account like #{account,jdbcType=VARCHAR}
        or t.user_name like #{userName,jdbcType=VARCHAR}


    </select>
    <select id="getUserIdByOrgId" resultType="java.lang.String">
        select t1.id from t_user t1
left join t_user_org t2 on t1.id=t2.user_id
where `status`=#{status,jdbcType=VARCHAR}
and t2.orgId in (#{orgId,jdbcType=VARCHAR})
    </select>
</mapper>
